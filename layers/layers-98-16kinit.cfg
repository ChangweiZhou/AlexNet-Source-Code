[data]
type=data
dataIdx=0

[labels]
type=data
dataIdx=1

[blur0]
type=blur
inputs=data
stdev=4
filterSize=9
channels=3
gpu=0

[nails0]
type=nailbed
inputs=blur0
stride=4
channels=3

[conv1a]
type=conv
inputs=data
channels=3
filters=32
padding=0
stride=4
filterSize=11
initW=0.01
partialSum=5
sharedBiases=1
gpu=0
initWFunc=initw.makew(conv1a)
initBFunc=initw.makeb(conv1a)

[conv1b]
type=conv
inputs=data
channels=3
filters=32
padding=0
stride=4
filterSize=11
initW=0.01
partialSum=5
sharedBiases=1
gpu=1
initWFunc=initw.makew(conv1b)
initBFunc=initw.makeb(conv1b)

[pool1a]
type=pool
pool=max
inputs=conv1a
sizeX=3
stride=2
channels=32
neuron=relu

[pool1b]
type=pool
pool=max
inputs=conv1b
sizeX=3
stride=2
channels=32
neuron=relu

[rnorm1a]
type=cmrnorm
inputs=pool1a
channels=32
size=9

[rnorm1b]
type=cmrnorm
inputs=pool1b
channels=32
size=9

[conv2a]
type=conv
inputs=nails0,rnorm1a
filters=128,64
padding=0,2
stride=2,1
filterSize=5,5
channels=3,32
initW=0.01,0.01
initB=1
partialSum=3
sharedBiases=1
groups=1,2
randSparse=0,1
neuron=relu
gpu=0
initWFunc=initw.makew(conv2a)
initBFunc=initw.makeb(conv2a)
initCFunc=initw.makec(conv2a)

[conv2b]
type=conv
inputs=nails0,rnorm1b
filters=128,64
padding=0,2
stride=2,1
filterSize=5,5
channels=3,32
initW=0.01,0.01
initB=1
partialSum=3
sharedBiases=1
groups=1,2
randSparse=0,1
neuron=relu
gpu=1
initWFunc=initw.makew(conv2b)
initBFunc=initw.makeb(conv2b)
initCFunc=initw.makec(conv2b)

[rnorm2a]
type=cmrnorm
inputs=conv2a
channels=128
size=9

[rnorm2b]
type=cmrnorm
inputs=conv2b
channels=128
size=9

[pool2a]
type=pool
pool=max
inputs=rnorm2a
sizeX=3
stride=2
channels=128

[pool2b]
type=pool
pool=max
inputs=rnorm2b
sizeX=3
stride=2
channels=128

[conv3a]
type=conv
inputs=pool2a,pool2b
filters=128,128
padding=1,1
stride=1,1
filterSize=3,3
channels=128,128
initW=0.03,0.03
partialSum=13
sharedBiases=1
groups=2,2
randSparse=1,1
neuron=relu
gpu=0
initWFunc=initw.makew(conv3a)
initBFunc=initw.makeb(conv3a)
initCFunc=initw.makec(conv3a)

[conv3b]
type=conv
inputs=pool2a,pool2b
filters=128,128
padding=1,1
stride=1,1
filterSize=3,3
channels=128,128
initW=0.03,0.03
partialSum=13
sharedBiases=1
groups=2,2
randSparse=1,1
neuron=relu
gpu=1
initWFunc=initw.makew(conv3b)
initBFunc=initw.makeb(conv3b)
initCFunc=initw.makec(conv3b)


[conv4a]
type=conv
inputs=conv3a
filters=128
padding=1
stride=1
filterSize=3
channels=256
neuron=relu
initW=0.03
initB=1
partialSum=13
sharedBiases=1
groups=2
randSparse=1
initWFunc=initw.makew(conv4a)
initBFunc=initw.makeb(conv4a)
initCFunc=initw.makec(conv4a)


[conv4b]
type=conv
inputs=conv3b
filters=128
padding=1
stride=1
filterSize=3
channels=256
neuron=relu
initW=0.03
initB=1
partialSum=13
sharedBiases=1
groups=2
randSparse=1
initWFunc=initw.makew(conv4b)
initBFunc=initw.makeb(conv4b)
initCFunc=initw.makec(conv4b)

[conv5a]
type=conv
inputs=conv4a
filters=128
padding=1
stride=1
filterSize=3
channels=256
initW=0.03
initB=1
partialSum=13
groups=1
randSparse=0
initWFunc=initw.makew(conv5a)
initBFunc=initw.makeb(conv5a)

[conv5b]
type=conv
inputs=conv4b
filters=128
padding=1
stride=1
filterSize=3
channels=256
initW=0.03
initB=1
partialSum=13
groups=1
randSparse=0
initWFunc=initw.makew(conv5b)
initBFunc=initw.makeb(conv5b)

[pool3a]
type=pool
pool=max
inputs=conv5a
sizeX=3
stride=2
channels=128
neuron=relu

[pool3b]
type=pool
pool=max
inputs=conv5b
sizeX=3
stride=2
channels=128
neuron=relu

[fc2048a]
type=fc
inputs=pool3a,pool3b
outputs=2048
initW=0.01,0.01
initB=1
neuron=relu
gpu=0
initWFunc=initw.makew(fc2048a)
initBFunc=initw.makeb(fc2048a)

[fc2048b]
type=fc
inputs=pool3a,pool3b
outputs=2048
initW=0.01,0.01
initB=1
neuron=relu
gpu=1
initWFunc=initw.makew(fc2048b)
initBFunc=initw.makeb(fc2048b)

[hs1a]
type=hs
keep=0.5
inputs=fc2048a

[hs1b]
type=hs
keep=0.5
inputs=fc2048b

[fc2048ba]
type=fc
inputs=hs1a,hs1b
outputs=2048
initW=0.01,0.01
initB=1
neuron=relu
gpu=0
initWFunc=initw.makew(fc2048ba)
initBFunc=initw.makeb(fc2048ba)

[fc2048bb]
type=fc
inputs=hs1b,hs1a
outputs=2048
initW=0.01,0.01
initB=1
neuron=relu
gpu=1
initWFunc=initw.makew(fc2048bb)
initBFunc=initw.makeb(fc2048bb)

[hs2a]
type=hs
keep=0.5
inputs=fc2048ba

[hs2b]
type=hs
keep=0.5
inputs=fc2048bb

[fc1000]
type=fc
outputs=1000
inputs=hs2a,hs2b
initW=0.01,0.01
gpu=1

[probs]
type=softmax
inputs=fc1000

[logprob]
type=cost.logreg
inputs=labels,probs
gpu=1
